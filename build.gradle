buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
}
plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

subprojects{
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'com.ewerk.gradle.plugins.querydsl'

    group = 'workduo'
    version = '0.1.0-SNAPSHOT'
    sourceCompatibility = '11'

    repositories {
        mavenCentral()
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
        implementation 'com.googlecode.json-simple:json-simple:1.1.1'
        implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
        implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
        implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

        compileOnly 'org.projectlombok:lombok'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'

        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
    def querydslDir = "$buildDir/generated/querydsl"
    querydsl {
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }


    configurations {
        querydsl.extendsFrom compileClasspath
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }
}

project(':workduo_member') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
        implementation 'com.10duke.client.jwt:jjwt:1.1.0'

        compileOnly project(':workduo_core')
        compileOnly project(':workduo_group')
    }
}

project(":workduo_group"){
    dependencies {
        implementation 'org.redisson:redisson-spring-boot-starter:3.17.5'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'

        compileOnly project(':workduo_core')
//        compileOnly project(':workduo_member')
    }
}